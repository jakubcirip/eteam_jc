{
  "name": "fullstack-server",
  "version": "1.0.0",
  "main": "build/app.js",
  "license": "MIT",
  "dependencies": {
    "@apidevtools/swagger-express-middleware": "^4.0.2",
    "@apidevtools/swagger-parser": "^10.0.2",
    "@biesbjerg/ngx-translate-extract": "^3.0.5",
    "@google-cloud/speech": "^4.1.0",
    "@google-cloud/text-to-speech": "^3.0.0",
    "@google-cloud/translate": "^6.0.0",
    "@google-cloud/vision": "^2.1.1",
    "@messageformat/core": "^3.0.0-beta.3",
    "@types/ffmpeg": "^1.0.0",
    "@types/i18n": "^0.8.6",
    "@wwwouter/typed-knex": "^2.14.0",
    "aes-everywhere": "^1.0.0",
    "archiver": "^5.0.0",
    "archiver-zip-encryptable": "^1.0.6",
    "axios": "^0.21.1",
    "bcrypt": "^3.0.6",
    "body-parser": "^1.18.3",
    "config": "^3.1.0",
    "cookie-parser": "^1.4.4",
    "cors": "^2.8.4",
    "crypto": "^1.0.1",
    "debug": "^3.2.6",
    "dotenv": "^6.0.0",
    "express": "^4.16.3",
    "express-request-id": "^1.4.1",
    "express-session": "^1.16.1",
    "ffmpeg": "0.0.4",
    "fs-extra": "^7.0.1",
    "glob": "^7.1.6",
    "handlebars": "^4.7.6",
    "https": "^1.0.0",
    "i18n": "^0.8.5",
    "i18n-extract": "^0.6.7",
    "knex": "^0.16.5",
    "lodash": "^4.17.20",
    "lodash.deburr": "^4.1.0",
    "mp3-duration": "^1.1.0",
    "mysql": "^2.17.1",
    "mysql2": "^1.6.5",
    "nodemailer": "^6.4.3",
    "path": "^0.12.7",
    "pg": "^6.1.2",
    "prettier": "^2.0.5",
    "puppeteer": "^5.2.1",
    "request": "^2.88.2",
    "socket.io": "^2.1.1",
    "swagger-tools": "^0.10.4",
    "swagger-typescript-codegen": "^1.9.9",
    "system-commands": "^1.1.7",
    "typescript": "^3.4.5",
    "uuid": "^3.4.0",
    "z-schema-errors": "^0.2.1"
  },
  "devDependencies": {
    "@types/config": "0.0.34",
    "@types/debug": "^4.1.4",
    "@types/dotenv": "^4.0.3",
    "@types/express": "^4.16.0",
    "@types/fs-extra": "^5.0.4",
    "@types/lodash": "^4.14.159",
    "@types/mysql": "^2.15.6",
    "@types/node": "^10.17.16"
  },
  "scripts": {
    "gen:route": "DEBUG=log,error,success,warn,info ts-node cli/generateRoute.ts $1",
    "db": "DEBUG=log,error,success,warn,info ts-node cli/recreateDatabase.ts && npm run migrate && npm run seed && npm run db:types",
    "db:types": "DEBUG=log,error,success,warn,info ts-node cli/genDbTypes.ts",
    "start": "DEBUG=log,error,success,warn,info node build/app.js",
    "dev:api2": "DEBUG=log,error,success,warn,info,knex:bindings,knex:query ts-node --files src/app.ts src/app.ts",
    "dev:api": "nodemon --ignore public/ -e ts --exec npm run dev:api2",
    "dev:swagger": "nodemon --watch swagger --ignore swagger/defaults/definitions.json --exec npm run build:swagger",
    "build:env": "DEBUG=log,error,success,warn,info ts-node cli/generateEnv.ts",
    "gen:lang": "node cli/extract_lang.js",
    "old2:build:lang": "rm -rf temp/lang.ts && GENLANG_ACTION=code ts-node cli/generateLang.ts > temp/lang.ts && ts-node temp/lang.ts && GENLANG_ACTION=parameters ts-node cli/generateLang.ts",
    "build": "npm run build:env && npm run build:lang && npm run build:swagger && npm run db:types && npm run build:api",
    "build:api": "tsc",
    "build:swagger2": "rm -rf temp/swagger && cp -r swagger/ temp/swagger/ && DEBUG=log,error,success,warn,info ts-node cli/generateSwaggerRelative.ts",
    "build:swagger": "node cli/generateDefinitions.js && rm -rf public/swagger.json && npm run build:swagger2 && swagger-cli bundle -o public/swagger.json -r temp/swagger/swagger.json && rm -rf temp/swagger && npm run g:types",
    "g:types": "node cli/typescript-codegen/typescript-codegen.js > src/api/models/swaggerTypes.ts && tslint --fix src/api/models/swaggerTypes.ts",
    "migrate:make": "knex migrate:make -x ts",
    "migrate": "ts-node -P ./tsconfig.json node_modules/.bin/knex migrate:latest --knexfile knexfile.js",
    "seed:make": "knex seed:make -x ts",
    "seed": "ts-node -P ./tsconfig.json node_modules/.bin/knex seed:run --knexfile knexfile.js",
    "old:dev:lang": "nodemon --watch ./src -e ts --delay 0.5 --exec npm run gen:lang",
    "old:gen:lang": "ngx-translate-extract --input ./src --output ./locales/*.json --clean -k --sort --format namespaced-json -m __"
  }
}
